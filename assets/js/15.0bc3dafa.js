(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{356:function(t,e,s){"use strict";s.r(e);var a=s(7),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ethereum-provider-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-provider-api"}},[t._v("#")]),t._v(" Ethereum Provider API")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Recommended Reading")]),t._v(" "),s("p",[t._v("We recommend that all web3 site developers read the "),s("a",{attrs:{href:"#upcoming-breaking-changes"}},[t._v("Upcoming Breaking Changes")]),t._v(" and "),s("a",{attrs:{href:"#basic-usage"}},[t._v("Basic Usage")]),t._v(" sections.")])]),t._v(" "),s("p",[t._v("MetaMask injects a global API into websites visited by its users at "),s("code",[t._v("window.ethereum")]),t._v(".\nThis API allows websites to request users' Ethereum accounts, read data from blockchains the user is connected to, and suggest that the user sign messages and transactions.\nThe presence of the provider object indicates an Ethereum user.\nWe recommend using "),s("a",{attrs:{href:"https://npmjs.com/package/@metamask/detect-provider",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("@metamask/detect-provider")]),s("OutboundLink")],1),t._v(" to detect our provider, on any platform or browser.")]),t._v(" "),s("p",[t._v("The Ethereum JavaScript provider API is specified by "),s("a",{attrs:{href:"https://eips.ethereum.org/EIPS/eip-1193",target:"_blank",rel:"noopener noreferrer"}},[t._v("EIP-1193"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this function detects most providers injected at window.ethereum")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" detectEthereumProvider "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@metamask/detect-provider'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" provider "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("detectEthereumProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("provider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// From now on, this should always be true:")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// provider === window.ethereum")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startApp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("provider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// initialize your app")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Please install MetaMask!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"table-of-contents"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[t._v("#")]),t._v(" Table of Contents")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#table-of-contents"}},[t._v("Table of Contents")])]),s("li",[s("a",{attrs:{href:"#upcoming-breaking-changes"}},[t._v("Upcoming Breaking Changes")]),s("ul",[s("li",[s("a",{attrs:{href:"#window-ethereum-api-changes"}},[t._v("window.ethereum API Changes")])]),s("li",[s("a",{attrs:{href:"#window-web3-removal"}},[t._v("window.web3 Removal")])])])]),s("li",[s("a",{attrs:{href:"#basic-usage"}},[t._v("Basic Usage")])]),s("li",[s("a",{attrs:{href:"#chain-ids"}},[t._v("Chain IDs")])]),s("li",[s("a",{attrs:{href:"#properties"}},[t._v("Properties")]),s("ul",[s("li",[s("a",{attrs:{href:"#ethereum-ismetamask"}},[t._v("ethereum.isMetaMask")])]),s("li",[s("a",{attrs:{href:"#ethereum-chainid"}},[t._v("ethereum.chainId")])]),s("li",[s("a",{attrs:{href:"#ethereum-autorefreshonnetworkchange"}},[t._v("ethereum.autoRefreshOnNetworkChange")])])])]),s("li",[s("a",{attrs:{href:"#methods"}},[t._v("Methods")]),s("ul",[s("li",[s("a",{attrs:{href:"#ethereum-isconnected"}},[t._v("ethereum.isConnected()")])]),s("li",[s("a",{attrs:{href:"#ethereum-request-args"}},[t._v("ethereum.request(args)")])])])]),s("li",[s("a",{attrs:{href:"#events"}},[t._v("Events")]),s("ul",[s("li",[s("a",{attrs:{href:"#connect"}},[t._v("connect")])]),s("li",[s("a",{attrs:{href:"#disconnect"}},[t._v("disconnect")])]),s("li",[s("a",{attrs:{href:"#accountschanged"}},[t._v("accountsChanged")])]),s("li",[s("a",{attrs:{href:"#chainchanged"}},[t._v("chainChanged")])]),s("li",[s("a",{attrs:{href:"#message"}},[t._v("message")])])])]),s("li",[s("a",{attrs:{href:"#errors"}},[t._v("Errors")])]),s("li",[s("a",{attrs:{href:"#using-the-provider"}},[t._v("Using the Provider")])]),s("li",[s("a",{attrs:{href:"#experimental-api"}},[t._v("Experimental API")])]),s("li",[s("a",{attrs:{href:"#experimental-methods"}},[t._v("Experimental Methods")]),s("ul",[s("li",[s("a",{attrs:{href:"#ethereum-metamask-isapproved-to-be-removed"}},[t._v("ethereum._metamask.isApproved() (TO BE REMOVED)")])]),s("li",[s("a",{attrs:{href:"#ethereum-metamask-isenabled-to-be-removed"}},[t._v("ethereum._metamask.isEnabled() (TO BE REMOVED)")])]),s("li",[s("a",{attrs:{href:"#ethereum-metamask-isunlocked"}},[t._v("ethereum._metamask.isUnlocked()")])])])]),s("li",[s("a",{attrs:{href:"#legacy-api"}},[t._v("Legacy API")])]),s("li",[s("a",{attrs:{href:"#legacy-properties"}},[t._v("Legacy Properties")]),s("ul",[s("li",[s("a",{attrs:{href:"#ethereum-networkversion-deprecated"}},[t._v("ethereum.networkVersion (DEPRECATED)")])]),s("li",[s("a",{attrs:{href:"#ethereum-selectedaddress-deprecated"}},[t._v("ethereum.selectedAddress (DEPRECATED)")])])])]),s("li",[s("a",{attrs:{href:"#legacy-methods"}},[t._v("Legacy Methods")]),s("ul",[s("li",[s("a",{attrs:{href:"#ethereum-enable-deprecated"}},[t._v("ethereum.enable() (DEPRECATED)")])]),s("li",[s("a",{attrs:{href:"#ethereum-sendasync-deprecated"}},[t._v("ethereum.sendAsync() (DEPRECATED)")])]),s("li",[s("a",{attrs:{href:"#ethereum-send-deprecated"}},[t._v("ethereum.send() (DEPRECATED)")])])])]),s("li",[s("a",{attrs:{href:"#legacy-events"}},[t._v("Legacy Events")]),s("ul",[s("li",[s("a",{attrs:{href:"#close-deprecated"}},[t._v("close (DEPRECATED)")])]),s("li",[s("a",{attrs:{href:"#chainidchanged-deprecated"}},[t._v("chainIdChanged (DEPRECATED)")])]),s("li",[s("a",{attrs:{href:"#networkchanged-deprecated"}},[t._v("networkChanged (DEPRECATED)")])]),s("li",[s("a",{attrs:{href:"#notification-deprecated"}},[t._v("notification (DEPRECATED)")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"upcoming-breaking-changes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upcoming-breaking-changes"}},[t._v("#")]),t._v(" Upcoming Breaking Changes")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Important Information")]),t._v(" "),s("p",[t._v("In the near future, we are making changes to our provider API that will be breaking for some web3 sites.\nThese changes are "),s("em",[t._v("upcoming")]),t._v(", but you can prepare for them today.\nFollow "),s("a",{attrs:{href:"https://github.com/MetaMask/metamask-extension/issues/8077",target:"_blank",rel:"noopener noreferrer"}},[t._v("this GitHub issue"),s("OutboundLink")],1),t._v(" for updates.")]),t._v(" "),s("p",[t._v("All consumers of MetaMask's provider may be affected by the "),s("code",[t._v("eth_chainId")]),t._v(" bug (see "),s("a",{attrs:{href:"#window-ethereum-api-changes"}},[t._v("next subsection")]),t._v(").\nOther than that, if you are new to using the provider, you do not have to worry about these changes, and can skip ahead "),s("a",{attrs:{href:"#api"}},[t._v("to the next section")]),t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"window-ethereum-api-changes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-ethereum-api-changes"}},[t._v("#")]),t._v(" "),s("code",[t._v("window.ethereum")]),t._v(" API Changes")]),t._v(" "),s("p",[t._v("In the near future, we are introducing some breaking changes to this API, which we encourage you to\n"),s("a",{attrs:{href:"https://medium.com/metamask/breaking-changes-to-the-metamask-inpage-provider-b4dde069dd0a",target:"_blank",rel:"noopener noreferrer"}},[t._v("read more about here"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("At that time, we will:")]),t._v(" "),s("ul",[s("li",[t._v("Ensure that chain IDs returned by "),s("code",[t._v("eth_chainId")]),t._v(" are "),s("strong",[t._v("not")]),t._v(" 0-padded\n"),s("ul",[s("li",[t._v("For example, instead of "),s("code",[t._v("0x01")]),t._v(", we will always return "),s("code",[t._v("0x1")]),t._v(", wherever the chain ID is returned or accessible.")]),t._v(" "),s("li",[t._v("Note that this "),s("em",[t._v("only")]),t._v(" affects the "),s("a",{attrs:{href:"#chain-ids"}},[t._v("default Ethereum chains")]),t._v(", "),s("em",[t._v("except")]),t._v(" Kovan, whose chain ID is formatted correctly ("),s("code",[t._v("0x2a")]),t._v(").")])])]),t._v(" "),s("li",[t._v("Stop emitting "),s("code",[t._v("chainIdChanged")]),t._v(", and instead emit "),s("code",[t._v("chainChanged")])]),t._v(" "),s("li",[t._v("Remove the following experimental methods:\n"),s("ul",[s("li",[s("code",[t._v("ethereum._metamask.isEnabled")])]),t._v(" "),s("li",[s("code",[t._v("ethereum._metamask.isApproved")])])])]),t._v(" "),s("li",[t._v("Remove the "),s("code",[t._v("ethereum.publicConfigStore")]),t._v(" object\n"),s("ul",[s("li",[t._v("This object was, despite its name, never intended for public consumption.\nIts removal "),s("em",[t._v("may")]),t._v(" affect those who do not use it directly, e.g. if another library you use relies on the object.")])])])]),t._v(" "),s("p",[t._v("These changes "),s("em",[t._v("may")]),t._v(" break your website.\nPlease read our "),s("RouterLink",{attrs:{to:"/guide/provider-migration.html"}},[t._v("Migration Guide")]),t._v(" for more details.")],1),t._v(" "),s("h3",{attrs:{id:"window-web3-removal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-web3-removal"}},[t._v("#")]),t._v(" "),s("code",[t._v("window.web3")]),t._v(" Removal")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("If you do not use the "),s("code",[t._v("window.web3")]),t._v(" object injected by MetaMask, you will not be affected by these changes.")])]),t._v(" "),s("p",[t._v("In the near future, we will:")]),t._v(" "),s("ul",[s("li",[t._v("Stop injecting "),s("code",[t._v("window.web3")]),t._v(" into web pages")])]),t._v(" "),s("p",[t._v("If you rely on the "),s("code",[t._v("window.web3")]),t._v(" object currently injected by MetaMask, these changes "),s("em",[t._v("will")]),t._v(" break your website.\nPlease read our "),s("RouterLink",{attrs:{to:"/guide/provider-migration.html"}},[t._v("migration guide")]),t._v(" for more details.")],1),t._v(" "),s("h2",{attrs:{id:"basic-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-usage"}},[t._v("#")]),t._v(" Basic Usage")]),t._v(" "),s("p",[t._v("For any non-trivial Ethereum web application — a.k.a. web3 site — to work, you will have to:")]),t._v(" "),s("ul",[s("li",[t._v("Detect the Ethereum provider ("),s("code",[t._v("window.ethereum")]),t._v(")")]),t._v(" "),s("li",[t._v("Detect which Ethereum network the user is connected to")]),t._v(" "),s("li",[t._v("Get the user's Ethereum account(s)")])]),t._v(" "),s("p",[t._v("The snippet at the top of this page is sufficient for detecting the provider.\nYou can learn how to accomplish the other two by reviewing the snippet in the "),s("a",{attrs:{href:"#using-the-provider"}},[t._v("Using the Provider section")]),t._v(".")]),t._v(" "),s("p",[t._v("The provider API is all you need to create a full-featured web3 application.")]),t._v(" "),s("p",[t._v("That said, many developers use a convenience library, such as "),s("a",{attrs:{href:"https://www.npmjs.com/package/ethers",target:"_blank",rel:"noopener noreferrer"}},[t._v("ethers"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://www.npmjs.com/package/web3",target:"_blank",rel:"noopener noreferrer"}},[t._v("web3.js"),s("OutboundLink")],1),t._v(", instead of using the provider directly.\nIf you are in need of higher-level abstractions than those provided by this API, we recommend that you use a convenience library.")]),t._v(" "),s("h2",{attrs:{id:"chain-ids"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chain-ids"}},[t._v("#")]),t._v(" Chain IDs")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("At the moment, the "),s("a",{attrs:{href:"#ethereum-chainid"}},[s("code",[t._v("ethereum.chainId")])]),t._v(" property and the "),s("a",{attrs:{href:"#chainchanged"}},[s("code",[t._v("chainChanged")])]),t._v(" event should be preferred over the "),s("code",[t._v("eth_chainId")]),t._v(" RPC method.\nTheir chain ID values are correctly formatted, per the table below.")]),t._v(" "),s("p",[s("code",[t._v("eth_chainId")]),t._v(" returns an incorrectly formatted (0-padded) chain ID for the chains in the table below, e.g. "),s("code",[t._v("0x01")]),t._v(" instead of "),s("code",[t._v("0x1")]),t._v(".\nSee the "),s("a",{attrs:{href:"#upcoming-breaking-changes"}},[t._v("Upcoming Breaking Changes section")]),t._v(" for details on when the "),s("code",[t._v("eth_chainId")]),t._v(" RPC method will be fixed.")]),t._v(" "),s("p",[t._v("Custom RPC endpoints are not affected; they always return the chain ID specified by the user.")])]),t._v(" "),s("p",[t._v("These are the IDs of the Ethereum chains that MetaMask supports by default.\nConsult "),s("a",{attrs:{href:"https://chainid.network",target:"_blank",rel:"noopener noreferrer"}},[t._v("chainid.network"),s("OutboundLink")],1),t._v(" for more.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Hex")]),t._v(" "),s("th",[t._v("Decimal")]),t._v(" "),s("th",[t._v("Network")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("0x1")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("Ethereum Main Network (MainNet)")])]),t._v(" "),s("tr",[s("td",[t._v("0x3")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("Ropsten Test Network")])]),t._v(" "),s("tr",[s("td",[t._v("0x4")]),t._v(" "),s("td",[t._v("4")]),t._v(" "),s("td",[t._v("Rinkeby Test Network")])]),t._v(" "),s("tr",[s("td",[t._v("0x5")]),t._v(" "),s("td",[t._v("5")]),t._v(" "),s("td",[t._v("Goerli Test Network")])]),t._v(" "),s("tr",[s("td",[t._v("0x2a")]),t._v(" "),s("td",[t._v("42")]),t._v(" "),s("td",[t._v("Kovan Test Network")])])])]),t._v(" "),s("h2",{attrs:{id:"properties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),s("h3",{attrs:{id:"ethereum-ismetamask"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-ismetamask"}},[t._v("#")]),t._v(" ethereum.isMetaMask")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("This property is not guaranteed to be correct for all providers. Non-MetaMask providers may also set this property to "),s("code",[t._v("true")]),t._v(".")])]),t._v(" "),s("p",[s("code",[t._v("true")]),t._v(" if the user has MetaMask installed.")]),t._v(" "),s("h3",{attrs:{id:"ethereum-chainid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-chainid"}},[t._v("#")]),t._v(" ethereum.chainId")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("The value of this property can change at any time, and should not be exclusively relied upon. See the "),s("a",{attrs:{href:"#chainchanged"}},[s("code",[t._v("chainChanged")])]),t._v(" event for details.")]),t._v(" "),s("p",[s("strong",[t._v("NOTE:")]),t._v(" See the "),s("a",{attrs:{href:"#chain-ids"}},[t._v("Chain IDs section")]),t._v(" for important information about the MetaMask provider's chain IDs.")])]),t._v(" "),s("p",[t._v("A hexadecimal string representing the current chain ID.")]),t._v(" "),s("h3",{attrs:{id:"ethereum-autorefreshonnetworkchange"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-autorefreshonnetworkchange"}},[t._v("#")]),t._v(" ethereum.autoRefreshOnNetworkChange")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("The value of this property will only affect MetaMask's behavior if "),s("code",[t._v("window.web3")]),t._v(" is accessed during the page lifecycle.\nWhen "),s("code",[t._v("window.web3")]),t._v(" "),s("a",{attrs:{href:"#window-web3-removal"}},[t._v("is removed")]),t._v(", either the effects of this property will change, or it will be removed.")]),t._v(" "),s("p",[t._v("As the consumer of this API, it is your responsbility to handle chain changes using the "),s("a",{attrs:{href:"#chainChanged"}},[s("code",[t._v("chainChanged")]),t._v(" event")]),t._v(".\nWe recommend reloading the page on "),s("code",[t._v("chainChange")]),t._v(" unless you have good reason not to.")])]),t._v(" "),s("p",[t._v("By default, this property is "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("p",[t._v("If this property is truthy, MetaMask will reload the page in the following cases:")]),t._v(" "),s("ul",[s("li",[t._v("When the connected chain (network) changes, if "),s("code",[t._v("window.web3")]),t._v(" has been accessed during the page lifecycle")]),t._v(" "),s("li",[t._v("When "),s("code",[t._v("window.web3")]),t._v(" is accessed, if the connected chain (network) has changed during the page lifecycle")])]),t._v(" "),s("p",[t._v("To disable this behavior, set this property to "),s("code",[t._v("false")]),t._v(" immediately after detecting the provider:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autoRefreshOnNetworkChange "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),s("h3",{attrs:{id:"ethereum-isconnected"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-isconnected"}},[t._v("#")]),t._v(" ethereum.isConnected()")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Note that this method has nothing to do with the user's accounts.")]),t._v(" "),s("p",[t._v('You may often encounter the word "connected" in reference to whether a web3 site can access the user\'s accounts.\nIn the provider interface, however, "connected" and "disconnected" refer to whether the provider can make RPC requests to the current chain.')])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isConnected")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Returns "),s("code",[t._v("true")]),t._v(" if the provider is connected to the current chain, and "),s("code",[t._v("false")]),t._v(" otherwise.")]),t._v(" "),s("p",[t._v("If the provider is not connected, the page will have to be reloaded in order for connection to be re-established.\nPlease see the "),s("a",{attrs:{href:"#connect"}},[s("code",[t._v("connect")])]),t._v(" and "),s("a",{attrs:{href:"#disconnect"}},[s("code",[t._v("disconnect")])]),t._v(" events for more information.")]),t._v(" "),s("h3",{attrs:{id:"ethereum-request-args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-request-args"}},[t._v("#")]),t._v(" ethereum.request(args)")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestArguments")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  method"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  params"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RequestArguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Use "),s("code",[t._v("request")]),t._v(" to submit RPC requests to Ethereum via MetaMask.\nIt returns a "),s("code",[t._v("Promise")]),t._v(" that resolves to the result of the RPC method call.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("params")]),t._v(" and return value will vary by RPC method.\nIn practice, if a method has any "),s("code",[t._v("params")]),t._v(", they are almost always of type "),s("code",[t._v("Array<any>")]),t._v(".")]),t._v(" "),s("p",[t._v("If the request fails for any reason, the Promise will reject with an "),s("a",{attrs:{href:"#errors"}},[t._v("Ethereum RPC Error")]),t._v(".")]),t._v(" "),s("p",[t._v("MetaMask supports most standardized Ethereum RPC methods, in addition to a number of methods that may not be\nsupported by other wallets.\nSee the MetaMask "),s("RouterLink",{attrs:{to:"/guide/rpc-api.html"}},[t._v("RPC API documentation")]),t._v(" for details.")],1),t._v(" "),s("h4",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("params"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xb60e8dd61c5d32be8058bb8eb970870f07233155'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xd46e8dd67c5d32be8058bb8eb970870f07244567'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    gas"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0x76c0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 30400")]),t._v("\n    gasPrice"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0x9184e72a000'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10000000000000")]),t._v("\n    value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0x9184e72a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2441406250")]),t._v("\n    data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nethereum\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    method"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eth_sendTransaction'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The result varies by by RPC method.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For example, this method will return a transaction hash hexadecimal string on success.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the request fails, the Promise will reject with an error.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),s("p",[t._v("The MetaMask provider implements the "),s("a",{attrs:{href:"https://nodejs.org/api/events.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js "),s("code",[t._v("EventEmitter")]),s("OutboundLink")],1),t._v(" API.\nThis sections details the events emitted via that API.\nThere are innumerable "),s("code",[t._v("EventEmitter")]),t._v(" guides elsewhere, but you can listen for events like this:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accountsChanged'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("accounts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Handle the new accounts, or lack thereof.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "accounts" will always be an array, but it can be empty.')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chainChanged'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chainId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Handle the new chain.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Correctly handling chain changes can be complicated.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We recommend reloading the page unless you have a very good reason not to.")]),t._v("\n  window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reload")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"connect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#connect"}},[t._v("#")]),t._v(" connect")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConnectInfo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  chainId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'connect'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("connectInfo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ConnectInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The MetaMask provider emits this event when it first becomes able to submit RPC requests to a chain.\nWe recommend using a "),s("code",[t._v("connect")]),t._v(" event handler and the "),s("a",{attrs:{href:"#ethereum-isconnected"}},[s("code",[t._v("ethereum.isConnected()")]),t._v(" method")]),t._v(" in order to determine when/if the provider is connected.")]),t._v(" "),s("h3",{attrs:{id:"disconnect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#disconnect"}},[t._v("#")]),t._v(" disconnect")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'disconnect'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ProviderRpcError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The MetaMask provider emits this event if it becomes unable to submit RPC requests to any chain.\nIn general, this will only happen due to network connectivity issues or some unforeseen error.")]),t._v(" "),s("p",[t._v("Once "),s("code",[t._v("disconnect")]),t._v(" has been emitted, the provider will not accept any new requests until the connection to the chain has been re-restablished, which requires reloading the page.\nYou can also use the "),s("a",{attrs:{href:"#ethereum-isconnected"}},[s("code",[t._v("ethereum.isConnected()")]),t._v(" method")]),t._v(" to determine if the provider is disconnected.")]),t._v(" "),s("h3",{attrs:{id:"accountschanged"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#accountschanged"}},[t._v("#")]),t._v(" accountsChanged")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accountsChanged'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accounts"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The MetaMask provider emits this event whenever the return value of the "),s("code",[t._v("eth_accounts")]),t._v(" RPC method changes.\n"),s("code",[t._v("eth_accounts")]),t._v(" returns an array that is either empty or contains a single account address.\nThe returned address, if any, is the address of the most recently used account that the caller is permitted to access.\nCallers are identified by their URL "),s("em",[t._v("origin")]),t._v(", which means that all sites with the same origin share the same permissions.")]),t._v(" "),s("p",[t._v("This means that "),s("code",[t._v("accountsChanged")]),t._v(" will be emitted whenever the user's exposed account address changes.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("We plan to allow the "),s("code",[t._v("eth_accounts")]),t._v(" array to be able to contain multiple addresses in the near future.")])]),t._v(" "),s("h3",{attrs:{id:"chainchanged"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chainchanged"}},[t._v("#")]),t._v(" chainChanged")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[s("strong",[t._v("NOTE:")]),t._v(" See the "),s("a",{attrs:{href:"#chain-ids"}},[t._v("Chain IDs section")]),t._v(" for important information about the MetaMask provider's chain IDs.")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chainChanged'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chainId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The MetaMask provider emits this event when the currently connected chain changes.")]),t._v(" "),s("p",[t._v("All RPC requests are submitted to the currently connected chain.\nTherefore, it's critical to keep track of the current chain ID by listening for this event.")]),t._v(" "),s("p",[t._v("We "),s("em",[t._v("strongly")]),t._v(" recommend reloading the page on chain changes, unless absolutely necessary not to.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chainChanged'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_chainId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reload")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#message"}},[t._v("#")]),t._v(" message")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProviderMessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ProviderMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The MetaMask provider emits this event when it receives some message that the consumer should be notified of.\nThe kind of message is identified by the "),s("code",[t._v("type")]),t._v(" string.")]),t._v(" "),s("p",[t._v("RPC subscription updates are a common use case for the "),s("code",[t._v("message")]),t._v(" event.\nFor example, if you create a subscription using "),s("code",[t._v("eth_subscribe")]),t._v(", each subscription update will be emitted as a "),s("code",[t._v("message")]),t._v(" event with a "),s("code",[t._v("type")]),t._v(" of "),s("code",[t._v("eth_subscription")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"errors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#errors"}},[t._v("#")]),t._v(" Errors")]),t._v(" "),s("p",[t._v("All errors thrown or returned by the MetaMask provider follow this interface:")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProviderRpcError")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The "),s("a",{attrs:{href:"#ethereum-request-args"}},[s("code",[t._v("ethereum.request(args)")]),t._v(" method")]),t._v(" throws errors eagerly.\nYou can often use the error "),s("code",[t._v("code")]),t._v(" property to determine why the request failed.\nCommon codes and their meaning include:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("4001")]),t._v(" "),s("ul",[s("li",[t._v("The request was rejected by the user")])])]),t._v(" "),s("li",[s("code",[t._v("-32602")]),t._v(" "),s("ul",[s("li",[t._v("The parameters were invalid")])])]),t._v(" "),s("li",[s("code",[t._v("-32603")]),t._v(" "),s("ul",[s("li",[t._v("Internal error")])])])]),t._v(" "),s("p",[t._v("For the complete list of errors, please see "),s("a",{attrs:{href:"https://eips.ethereum.org/EIPS/eip-1193#provider-errors",target:"_blank",rel:"noopener noreferrer"}},[t._v("EIP-1193"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://eips.ethereum.org/EIPS/eip-1474#error-codes",target:"_blank",rel:"noopener noreferrer"}},[t._v("EIP-1474"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("The "),s("a",{attrs:{href:"https://npmjs.com/package/eth-rpc-errors",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("eth-rpc-errors")]),s("OutboundLink")],1),t._v(" package implements all RPC errors thrown by the MetaMask provider, and can help you identify their meaning.")])]),t._v(" "),s("h2",{attrs:{id:"using-the-provider"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-the-provider"}},[t._v("#")]),t._v(" Using the Provider")]),t._v(" "),s("p",[t._v("This snippet explains how to accomplish the three most common requirements for web3 sites:")]),t._v(" "),s("ul",[s("li",[t._v("Detect the Ethereum provider ("),s("code",[t._v("window.ethereum")]),t._v(")")]),t._v(" "),s("li",[t._v("Detect which Ethereum network the user is connected to")]),t._v(" "),s("li",[t._v("Get the user's Ethereum account(s)")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*****************************************/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Detect the MetaMask Ethereum provider */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*****************************************/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" detectEthereumProvider "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@metamask/detect-provider'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this returns the provider, or null if it wasn't detected")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" provider "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("detectEthereumProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("provider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startApp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("provider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize your app")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Please install MetaMask!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startApp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("provider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the provider returned by detectEthereumProvider is not the same as")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// window.ethereum, something is overwriting it, perhaps another wallet.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("provider "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Do you have multiple wallets installed?'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Access the decentralized web!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**********************************************************/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Handle chain (network) and chainChanged (per EIP-1193) */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**********************************************************/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Normally, we would recommend the 'eth_chainId' RPC method, but it currently")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns incorrectly formatted chain ID values.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" currentChainId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chainId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chainChanged'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleChainChanged"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleChainChanged")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_chainId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We recommend reloading the page, unless you must do otherwise")]),t._v("\n  window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reload")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***********************************************************/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Handle user accounts and accountsChanged (per EIP-1193) */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***********************************************************/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" currentAccount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nethereum\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eth_accounts'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handleAccountsChanged"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Some unexpected error.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For backwards compatibility reasons, if no accounts are available,")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eth_accounts will return an empty array.")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note that this event is emitted on page load.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the array of accounts is non-empty, you're already")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// connected.")]),t._v("\nethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accountsChanged'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleAccountsChanged"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For now, 'eth_accounts' will continue to always return an array")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAccountsChanged")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("accounts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accounts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MetaMask is locked or the user has not connected any accounts")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Please connect to MetaMask.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accounts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" currentAccount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    currentAccount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" accounts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do any other work!")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*********************************************/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Access the user's accounts (per EIP-1102) */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*********************************************/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You should only attempt to request the user's accounts in response to user")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// interaction, such as a button click.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Otherwise, you popup-spam the user like it's 1999.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If you fail to retrieve the user's account(s), you should encourage the user")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to initiate the attempt.")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'connectButton'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" connect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ethereum\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eth_requestAccounts'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handleAccountsChanged"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// EIP-1193 userRejectedRequest error")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If this happens, the user rejected the connection request.")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Please connect to MetaMask.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"experimental-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#experimental-api"}},[t._v("#")]),t._v(" Experimental API")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("There is no guarantee that the methods and properties defined in this section will remain stable.\nUse it at your own risk.")])]),t._v(" "),s("p",[t._v("We expose some experimental, MetaMask-specific methods under the "),s("code",[t._v("ethereum._metamask")]),t._v(" property.")]),t._v(" "),s("h2",{attrs:{id:"experimental-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#experimental-methods"}},[t._v("#")]),t._v(" Experimental Methods")]),t._v(" "),s("h3",{attrs:{id:"ethereum-metamask-isapproved-to-be-removed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-metamask-isapproved-to-be-removed"}},[t._v("#")]),t._v(" ethereum._metamask.isApproved() (TO BE REMOVED)")]),t._v(" "),s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("DANGER")]),t._v(" "),s("p",[t._v("This will be removed in the future.")]),t._v(" "),s("p",[t._v("Please see the "),s("a",{attrs:{href:"#using-the-provider"}},[t._v("Using the Provider section")]),t._v(" for the recommended way of keeping track of user accounts.")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_metamask"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isApproved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("This method returns a "),s("code",[t._v("Promise")]),t._v(" that resolves to a "),s("code",[t._v("boolean")]),t._v(" indicating if the caller has access to user accounts.")]),t._v(" "),s("h3",{attrs:{id:"ethereum-metamask-isenabled-to-be-removed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-metamask-isenabled-to-be-removed"}},[t._v("#")]),t._v(" ethereum._metamask.isEnabled() (TO BE REMOVED)")]),t._v(" "),s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("DANGER")]),t._v(" "),s("p",[t._v("This will be removed in the future.")]),t._v(" "),s("p",[t._v("Please see the "),s("a",{attrs:{href:"#using-the-provider"}},[t._v("Using the Provider section")]),t._v(" for the recommended way of keeping track of user accounts.")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_metamask"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEnabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("This method returns a "),s("code",[t._v("boolean")]),t._v(" indicating if the caller has access to user accounts.")]),t._v(" "),s("h3",{attrs:{id:"ethereum-metamask-isunlocked"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-metamask-isunlocked"}},[t._v("#")]),t._v(" ethereum._metamask.isUnlocked()")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_metamask"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isUnlocked")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("This method returns a "),s("code",[t._v("Promise")]),t._v(" that resolves to a "),s("code",[t._v("boolean")]),t._v(" indicating if MetaMask is unlocked by the user.\nMetaMask must be unlocked in order to perform any operation involving user accounts.\nNote that this method does not indicate if the user has exposed any accounts to the caller.")]),t._v(" "),s("h2",{attrs:{id:"legacy-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#legacy-api"}},[t._v("#")]),t._v(" Legacy API")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("You should "),s("strong",[t._v("never")]),t._v(" rely on any of these methods, properties, or events in practice.")])]),t._v(" "),s("p",[t._v("This section documents our legacy provider API.\nMetaMask only supported this API before the provider API was standardized via "),s("a",{attrs:{href:"https://eips.ethereum.org/EIPS/eip-1193",target:"_blank",rel:"noopener noreferrer"}},[t._v("EIP-1193"),s("OutboundLink")],1),t._v(" in 2020.\nBecause of this, you may find web3 sites that use this API, or other providers that implement it.")]),t._v(" "),s("h2",{attrs:{id:"legacy-properties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#legacy-properties"}},[t._v("#")]),t._v(" Legacy Properties")]),t._v(" "),s("h3",{attrs:{id:"ethereum-networkversion-deprecated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-networkversion-deprecated"}},[t._v("#")]),t._v(" ethereum.networkVersion (DEPRECATED)")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("You should always prefer the chain ID over the network ID.")]),t._v(" "),s("p",[t._v("If you must get the network ID, use "),s("a",{attrs:{href:"#ethereum-request-args"}},[s("code",[t._v("ethereum.request({ method: 'net_version' })")])]),t._v(".")]),t._v(" "),s("p",[t._v("The value of this property can change at any time.")])]),t._v(" "),s("p",[t._v("A decimal string representing the current blockchain's network ID.")]),t._v(" "),s("h3",{attrs:{id:"ethereum-selectedaddress-deprecated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-selectedaddress-deprecated"}},[t._v("#")]),t._v(" ethereum.selectedAddress (DEPRECATED)")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Use "),s("a",{attrs:{href:"#ethereum-request-args"}},[s("code",[t._v("ethereum.request({ method: 'eth_accounts' })")])]),t._v(" instead.")]),t._v(" "),s("p",[t._v("The value of this property can change at any time.")])]),t._v(" "),s("p",[t._v('Returns a hexadecimal string representing the user\'s "currently selected" address.')]),t._v(" "),s("p",[t._v('The "currently selected" address is the first item in the array returned by '),s("code",[t._v("eth_accounts")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"legacy-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#legacy-methods"}},[t._v("#")]),t._v(" Legacy Methods")]),t._v(" "),s("h3",{attrs:{id:"ethereum-enable-deprecated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-enable-deprecated"}},[t._v("#")]),t._v(" ethereum.enable() (DEPRECATED)")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Use "),s("a",{attrs:{href:"#ethereum-request-args"}},[s("code",[t._v("ethereum.request({ method: 'eth_requestAccounts' })")])]),t._v(" instead.")])]),t._v(" "),s("p",[t._v("Alias for "),s("code",[t._v("ethereum.request({ method: 'eth_requestAccounts' })")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"ethereum-sendasync-deprecated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-sendasync-deprecated"}},[t._v("#")]),t._v(" ethereum.sendAsync() (DEPRECATED)")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Use "),s("a",{attrs:{href:"#ethereum-request-args"}},[s("code",[t._v("ethereum.request()")])]),t._v(" instead.")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonRpcRequest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  jsonrpc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2.0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  method"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  params"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonRpcResponse")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  jsonrpc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2.0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  method"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  result"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  error"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonRpcCallback")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" JsonRpcResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" JsonRpcRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" JsonRpcCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("This is the ancestor of "),s("code",[t._v("ethereum.request")]),t._v(". It only works for JSON-RPC methods, and takes a JSON-RPC request payload object and an error-first callback function as its arguments.")]),t._v(" "),s("p",[t._v("See the "),s("a",{attrs:{href:"https://eips.ethereum.org/EIPS/eip-1474",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ethereum JSON-RPC API"),s("OutboundLink")],1),t._v(" for details.")]),t._v(" "),s("h3",{attrs:{id:"ethereum-send-deprecated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-send-deprecated"}},[t._v("#")]),t._v(" ethereum.send() (DEPRECATED)")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Use "),s("a",{attrs:{href:"#ethereum-request-args"}},[s("code",[t._v("ethereum.request()")])]),t._v(" instead.")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  methodOrPayload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JsonRpcRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  paramsOrCallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" JsonRpcCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("JsonRpcResponse"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("This method behaves unpredictably and should be avoided at all costs.\nIt is essentially an overloaded version of "),s("a",{attrs:{href:"#ethereum-sendasync-deprecated"}},[s("code",[t._v("ethereum.sendAsync()")])]),t._v(".")]),t._v(" "),s("p",[s("code",[t._v("ethereum.send()")]),t._v(" can be called in three different ways:")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.")]),t._v("\nethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" JsonRpcRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" JsonRpcCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.")]),t._v("\nethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("JsonRpcResponse"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.")]),t._v("\nethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" JsonRpcRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("You can think of these signatures as follows:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("This signature is exactly like "),s("code",[t._v("ethereum.sendAsync()")])])]),t._v(" "),s("li",[s("p",[t._v("This signature is like an async "),s("code",[t._v("ethereum.sendAsync()")]),t._v(" with "),s("code",[t._v("method")]),t._v(" and "),s("code",[t._v("params")]),t._v(" as arguments, instead of a JSON-RPC payload and callback")])]),t._v(" "),s("li",[s("p",[t._v("This signature enables you to call the following RPC methods synchronously:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("eth_accounts")])]),t._v(" "),s("li",[s("code",[t._v("eth_coinbase")])]),t._v(" "),s("li",[s("code",[t._v("eth_uninstallFilter")])]),t._v(" "),s("li",[s("code",[t._v("net_version")])])])])]),t._v(" "),s("h2",{attrs:{id:"legacy-events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#legacy-events"}},[t._v("#")]),t._v(" Legacy Events")]),t._v(" "),s("h3",{attrs:{id:"close-deprecated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#close-deprecated"}},[t._v("#")]),t._v(" close (DEPRECATED)")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Use "),s("a",{attrs:{href:"#disconnect"}},[s("code",[t._v("disconnect")])]),t._v(" instead.")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'close'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"chainidchanged-deprecated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chainidchanged-deprecated"}},[t._v("#")]),t._v(" chainIdChanged (DEPRECATED)")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Use "),s("a",{attrs:{href:"#chainchanged"}},[s("code",[t._v("chainChanged")])]),t._v(" instead.")])]),t._v(" "),s("p",[t._v("Misspelled alias of "),s("a",{attrs:{href:"#chainchanged"}},[s("code",[t._v("chainChanged")])]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chainChanged'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chainId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"networkchanged-deprecated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#networkchanged-deprecated"}},[t._v("#")]),t._v(" networkChanged (DEPRECATED)")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Use "),s("a",{attrs:{href:"#chainchanged"}},[s("code",[t._v("chainChanged")])]),t._v(" instead.")])]),t._v(" "),s("p",[t._v("Like "),s("a",{attrs:{href:"#chainchanged"}},[s("code",[t._v("chainChanged")])]),t._v(", but with the "),s("code",[t._v("networkId")]),t._v(" instead.\nNetwork IDs are insecure, and were effectively deprecated in favor of chain IDs by "),s("a",{attrs:{href:"https://eips.ethereum.org/EIPS/eip-155",target:"_blank",rel:"noopener noreferrer"}},[t._v("EIP-155"),s("OutboundLink")],1),t._v(".\nAvoid using them unless you know what you are doing.")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'networkChanged'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("networkId"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"notification-deprecated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#notification-deprecated"}},[t._v("#")]),t._v(" notification (DEPRECATED)")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Use "),s("a",{attrs:{href:"#message"}},[s("code",[t._v("message")])]),t._v(" instead.")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("ethereum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'notification'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);