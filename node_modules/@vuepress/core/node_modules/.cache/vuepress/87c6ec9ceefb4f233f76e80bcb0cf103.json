{"remainingRequest":"/home/circleci/project/project/node_modules/babel-loader/lib/index.js??ref--3-1!/home/circleci/project/project/node_modules/@vuepress/core/.temp/internal/siteData.js","dependencies":[{"path":"/home/circleci/project/project/node_modules/@vuepress/core/.temp/internal/siteData.js","mtime":1582596737718},{"path":"/home/circleci/project/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/circleci/project/project/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}